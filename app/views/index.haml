- unless current_user.assigned_pages.empty?
  %h2 Deine Seiten
  %ul#dashboard
    - current_user.assigned_pages.each do |p|
      %li
        - if p.person.present?
          %a{ href: "/people/#{p.person.uid}"}= p.name
        - else
          %a{ href: "/pages/#{p.id}/edit"}= p.name
        %span.wordcount== (#{p.wordcount} Wörter)

%h1 Abi Wan Kenobi — Möge G8 mit dir sein!
%p
  Die Seite soll uns den großen Organisationsaufwand für die Abisachen abnehmen. Da wir so viele sind, wirds sonst schnell mal unübersichtlich. Hier können 
  = succeed ',' do
    %a{ :href => '/#users'} Steckbriefe
  %a{ :href => '/courses'} Kursberichte
  und andere Artikel für die Abizeitung online geschrieben werden. Auch finden 
  %a{ :href => '/polls'} Umfragen und Abstimmungen
  statt.

%p
  Wenn du oben auf 
  %a{ :href => "/preferences" } "Einstellungen"
  klickst, kannst du deinen Benutzernamen ändern, z.B. ungeliebte Zweitnamen entfernen (das heißt <em>nicht</em> irgendwelche Nicknames eintragen).
  Wenn du irgendwelche Fragen hast, schau doch mal in den Chat. Wenn dir da keiner helfen kann, schreib eine Nachricht in unser 
  %a{ href: "http://piratepad.net/ZTInoZhyvt"} Support-Pad.


%ul#splash
  %li
    %a{ :href => 'http://blazing-warrior-7323.heroku.com/'}
      %img{ :src => '/images/icons/star.png' }
      %h3 Memoiren/Sprüche
  
    %li.emph
      %a{ :href => '/courses'}
        %img{ :src => '/images/icons/page_full.png' }
        %h3 Kursberichte
  
  %li
    %a{ :href => '/comments'}
      %img{ :src => '/images/icons/cloud_comment.png' }
      %h3 Kommentare

%h2 Fotos

%p
  %strong Wir sammeln Fotos.
  Für jede Studienfahrt gibt's eine Seite, vielleicht auch eine Doppelseite, die es mit Fotos zu füllen gilt.
  Auch sonst haben wir noch ziemlich viel Platz für Fotos, egal aus welchem Zusammenhang.
  Wenn du Fotos von deiner Studienfahrt oder andere hast, schreib doch
  %a{ href: 'mailto:lu@0x83.eu' } Lukas
  eine Mail.

%h2 Chat
%a{ name: 'chat' }
%form{ action: '/messages', method: 'post', id: 'chat_form' }
  %input{ type: 'text', name: 'message[body]', size: 40, maxlength: 150, placeholder: 'Nachricht hier eingeben', id: 'chat_message' }
  %input{ type: 'submit', value: 'Senden' }
%ul#chat
  :javascript
    function renderMessage(msg) {
      var a = $("<li>")
        .append("<span class=author>"+msg.author+"</span>")
        .append(" <span class=time>("+msg.created_at+")</span>: ")
        .append(" <span class=message>"+msg.body+"</span>")
      $("#chat").prepend(a);
      return a;
    }
  
    var thingChannel = pusher.subscribe('chat');
    thingChannel.bind('message', function(message) {
      var el = renderMessage(message);
      $(el).effect("highlight", {}, 3000);
    });
    
    var latestMessages = JSON.parse('#{Message.newest.reverse.map(&:client_attributes).to_json.gsub("'", "")}')
    
    $('#chat_form').ajaxForm()
    
    $('#chat_form').submit(function() { // immediately clear
      $("#chat_message").val("")
    })
    
    $.each(latestMessages, function() {
      renderMessage(this)
    })

%h2 Alle Benutzer
%a{ name: 'users' }

.global-count
  %span= Person.where(:active.ne => false).count
  registrierte Benutzer

.global-count
  %span= Person.where(:page_id.ne => nil).count
  angefangene Benutzerseiten

.global-count
  %span= Course.all.select{|c|c.page.present?}.count
  angefangene Kursberichte bei
  = Course.count
  Kursen

.global-count
  %span= Poll.count
  Umfragen und Abstimmungen

%p.small Um die Seite für eine Person anzufangen, klick auf den Namen.

%ul
  - Person.order_by(:uid, :asc).each do |person|
    %li
      %a{ :href => "/people/#{person.uid}" }= person.name
      - if person.page.present?
        %span== (#{person.page.responsible.name} schreibt die Seite)